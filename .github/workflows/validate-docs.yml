name: Validate Documentation

on:
  push:
    paths:
      - 'docs/**/*.md'
      - 'mkdocs.yml'
      - 'lint_markdown_strict.py'
      - '.prettierrc'
      - 'package.json'
      - 'Makefile'
  pull_request:
    paths:
      - 'docs/**/*.md'
      - 'mkdocs.yml'
      - 'lint_markdown_strict.py'
      - '.prettierrc'
      - 'package.json'
      - 'Makefile'

jobs:
  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install all dependencies
      run: make install
        
    - name: Run all validations
      run: |
        echo "üîç Running all validation checks..."
        
        # Run format check (don't fail on this)
        echo "üíÖ Checking Prettier formatting..."
        make format-check || echo "‚ö†Ô∏è Formatting issues found (non-blocking)"
        
        # Run strict build (this should fail on errors)
        echo "üèóÔ∏è Running MkDocs strict build..."
        make build-strict
        
        # Run custom linter (fail on errors, not warnings)
        echo "üîç Running custom markdown linter..."
        make lint > lint_output.txt 2>&1 || true
        
        # Check for errors
        if grep -q "‚ùå ERRORS" lint_output.txt; then
          echo "‚ùå Critical markdown errors found!"
          cat lint_output.txt
          exit 1
        else
          echo "‚úÖ No critical errors found"
          tail -20 lint_output.txt || true
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: validation-results
        path: |
          site/
          lint_output.txt